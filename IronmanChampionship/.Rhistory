Ironman <- read.csv( "Ironman.csv", header=TRUE  )
? read.csv
Ironman <- read.csv( "Ironman.csv", header=TRUE,
as.is=!dtingAsFactors )
Ironman <- read.csv( "Ironman.csv", header=TRUE,
as.is=!stringAsFactors )
Ironman <- read.csv( "Ironman.csv", header=TRUE,
as.is=!stringsAsFactors )
Ironman <- read.csv( "Ironman.csv", header=TRUE,
as.is=!stringsAsFactors )
Ironman <- read.csv( "Ironman.csv", header=TRUE,
as.is = !stringsAsFactors )
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsASFactors=FALSE  )
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsAsFactors=FALSE  )
Ironman$Year <- as.integer( IronMan$Year )
Ironman$Year <- as.integer( Ironman$Year )
?substr
install.packages("stringr")
myString <- Ironman[1,3]
str_locate_all(pattern =':', timeString )
require( stringr )                               # For advanced string manipiulation
str_locate_all(pattern =':', timeString )
timeString <- Ironman[1,3]
str_locate_all(pattern =':', timeString )
timeList <- str_locate_all(pattern =':', timeString )
j <- timeList[[1]]
j <- timeList[[1]]
j
j <- timeList[[1,1]]
j <- timeList[[1]]
j
j
j <- timeList[[1]][1]
j
charHours <- timeList[[1]][1]
j <- timeList[[2]][1]
j <- timeList[[1]][1][2]
j <-timeList[[1]][2]
?substr
charHours <- substr( timeString, 1, j-1 )
R Time
# Ironman010.r
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsAsFactors=FALSE  )
require( stringr )                               # For advanced string manipiulation
Ironman$Year <- as.integer( Ironman$Year )
pattern <- ":"
timeString <- Ironman[1,3]
?strpsplit
?strsplit
splitList <- strsplt( timeString, split=":", fixed=TRUE )
splitList <- strsplit( timeString, split=":", fixed=TRUE )
splitList
hours <- splitList[[1]][1]
splitList <- as. numeric (strsplit( timeString, split=":", fixed=TRUE ))
splitList <- as.integer (strsplit( timeString, split=":", fixed=TRUE ))
hours <- splitList[[1]][1]
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
IronMan$Minutes <- 60 * Hours + minutes + seconds / 60.
IronMan$Minutes <- 60 * hours + minutes + seconds / 60.
Ironman$Minutes <- 60 * hours + minutes + seconds / 60.
# Ironman010.r
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsAsFactors=FALSE  )
require( stringr )                               # For advanced string manipiulation
Ironman$Year <- as.integer( Ironman$Year )
pattern <- ":"
timeString <- Ironman[,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes <- 60 * hours + minutes + seconds / 60.
Ironman$Minutes
# Ironman010.r
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsAsFactors=FALSE  )
require( stringr )                               # For advanced string manipiulation
Ironman$Year <- as.integer( Ironman$Year )
pattern <- ":"
for( i in 1:n ){
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes <- 60 * hours + minutes + seconds / 60.
}
n <- nrow( Ironman )
for( i in 1:n ){
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes <- 60 * hours + minutes + seconds / 60.
}
i=1
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes <- 60 * hours + minutes + seconds / 60.
Ironman$Minutes
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes[i] <- 60 * hours + minutes + seconds / 60.
i=2
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes[i] <- 60 * hours + minutes + seconds / 60.
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes[i] <- 60 * hours + minutes + seconds / 60.
for( i in 1:n ){
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes[i] <- 60 * hours + minutes + seconds / 60.
}
save( Ironman, files="Ironman.rda")
# Ironman010.r
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsAsFactors=FALSE  )
head( Ironman )
n <- nrow( Ironman )
Ironman$Year <- as.integer( Ironman$Year )
n <- nrow(Ironman)
pattern <- ":"
for( i in 1:n ){
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes[i] <- 60 * hours + minutes + seconds / 60.
}
save( Ironman, files="Ironman.rda")
save( Ironman, file="Ironman.rda")
require( ggplot2 )
ggplot( Ironman, aes( x=Year, y=Minutes )) +
geom_point()
require( ggplot2 )
ggplot( Ironman, aes( x=Year, y=Minutes )) +
geom_point() +
geom_line()
IronmanlogMintues <- with( Ironman, log(Minutes) )
# Ironman010.r
Ironman <- read.csv( "Ironman.csv", header=TRUE,
stringsAsFactors=FALSE  )
head( Ironman )
n <- nrow( Ironman )
Ironman$Year <- as.integer( Ironman$Year )
n <- nrow(Ironman)
pattern <- ":"
for( i in 1:n ){
timeString <- Ironman[i,3]
splitList <-  strsplit( timeString, split=":", fixed=TRUE )
hours <- as.integer( splitList[[1]][1] )
minutes <- as.integer( splitList[[1]][2]  )
seconds <- as.integer( splitList[[1]][3]  )
Ironman$Minutes[i] <- 60 * hours + minutes + seconds / 60.
IronmanlogMintues <- with( Ironman, log(Minutes) )
}
save( Ironman, file="Ironman.rda")
require( ggplot2 )
ggplot( Ironman, aes( x=Year, y=Minutes )) +
geom_point() +
geom_line()
require( ggplot2 )
ggplot( Ironman, aes( x=Year, y=logMinutesMinutes )) +
geom_point() +
geom_line()
IronmanlogMintues <- with( Ironman, log(Minutes) )
View(Ironman)
View(Ironman)
Ironman <- within( Ironman, logMinutes=log( Minutes ) )
?within
Ironman <- within( Ironman, { logMinutes=log( Minutes )} )
require( ggplot2 )
ggplot( Ironman, aes( x=Year, y=logMinutes )) +
geom_point() +
geom_line()
equire( ggplot2 )
ggplot( Ironman, aes( x=Year, y=Minutes )) +
geom_point() +
geom_line()
rm( list=ls())
load( "IronMan.rda" )
library( ggplot2  )
ggplot( IronMan,
x=minutes ) +
geom_histogram()
ggplot( Ironman,
x=minutes ) +
geom_histogram()
ggplot( Ironman,
aes( x=Minutes ) ) +
geom_histogram()
ggplot( Ironman,
aes( x=Minutes ) ) +
geom_histogram( binwidth=100,
color="black",
fill="white")
ggplot( Ironman,
aes( x=Minutes ) ) +
geom_histogram( binwidth=50,
color="black",
fill="white")
ggplot( Ironman,
aes( x=Minutes ) ) +
geom_histogram( binwidth=25,
color="black",
fill="white")
ggplot( Ironman,
aes( x=Minutes ) ) +
geom_histogram( binwidth=25,
color="black",
fill="white") +
xlab( "Gold times (Minutes)" ) +
ylab( "Frequency" ) +
ggtitle( "1978 - 2014 Ironman Gold times"  )
